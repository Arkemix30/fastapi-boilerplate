"""initial commit

Revision ID: 52ddce62e7bf
Revises:
Create Date: 2023-02-27 13:28:51.705330

"""
import sqlalchemy as sa
import sqlmodel  # NEW

from alembic import op

# import geoalchemy2          # POSTGIS


# revision identifiers, used by Alembic.
revision = "52ddce62e7bf"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "student_student",
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "first_name",
            sqlmodel.sql.sqltypes.AutoString(length=50),
            nullable=False,
        ),
        sa.Column(
            "last_name",
            sqlmodel.sql.sqltypes.AutoString(length=50),
            nullable=False,
        ),
        sa.Column(
            "gender",
            sa.Enum("MALE", "FEMALE", name="gendertype"),
            nullable=False,
        ),
        sa.Column("date_of_birth", sa.DateTime(), nullable=False),
        sa.Column(
            "address",
            sqlmodel.sql.sqltypes.AutoString(length=100),
            nullable=True,
        ),
        sa.Column(
            "cell_phone",
            sqlmodel.sql.sqltypes.AutoString(length=8),
            nullable=True,
        ),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column(
            "status",
            sa.Enum("ACTIVE", "INACTIVE", name="studentstatustype"),
            nullable=False,
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "student_admission",
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            "date",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("student_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["student_id"],
            ["student_student.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "student_guardian",
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "first_name",
            sqlmodel.sql.sqltypes.AutoString(length=50),
            nullable=False,
        ),
        sa.Column(
            "last_name",
            sqlmodel.sql.sqltypes.AutoString(length=50),
            nullable=False,
        ),
        sa.Column(
            "cell_phone",
            sqlmodel.sql.sqltypes.AutoString(length=8),
            nullable=True,
        ),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column(
            "address",
            sqlmodel.sql.sqltypes.AutoString(length=100),
            nullable=True,
        ),
        sa.Column(
            "profession",
            sqlmodel.sql.sqltypes.AutoString(length=50),
            nullable=True,
        ),
        sa.Column("student_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["student_id"],
            ["student_student.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "student_student_fee",
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.Column(
            "date_submitted",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "total_amount", sa.Numeric(precision=10, scale=2), nullable=False
        ),
        sa.Column("valid_until", sa.DateTime(), nullable=False),
        sa.Column("student_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["student_id"],
            ["student_student.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("student_student_fee")
    op.drop_table("student_guardian")
    op.drop_table("student_admission")
    op.drop_table("student_student")
    # ### end Alembic commands ###
